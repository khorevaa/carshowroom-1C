#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ПараметрыОбработкиПользователяИБ; // Параметры, заполняемые при обработке пользователя ИБ.
                                        // Используются в обработчике события ПриЗаписи.

Перем ЭтоНовый; // Показывает, что был записан новый объект.
                // Используются в обработчике события ПриЗаписи.

Перем СтарыйОбъектАвторизации; // Значений объекта авторизации до изменения.
                               // Используются в обработчике события ПриЗаписи.

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ЭтоНовый = ЭтоНовый();

	Если НЕ ЗначениеЗаполнено(ОбъектАвторизации) Тогда
		ВызватьИсключение "У внешнего пользователя не задан объект авторизации.";
	Иначе
		ТекстОшибки = "";
		Если ПользователиСервер.сОбъектАвторизацииИспользуется(ОбъектАвторизации, Ссылка, , , ТекстОшибки) Тогда
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
	КонецЕсли;

	// Проверка, что объект авторизации не изменен.
	Если ЭтоНовый Тогда
		СтарыйОбъектАвторизации = NULL;
	Иначе
		СтарыйОбъектАвторизации = БазоваяПодсистемаСервер.ЗначениеРеквизитаОбъекта(Ссылка, "ОбъектАвторизации");

		Если ЗначениеЗаполнено(СтарыйОбъектАвторизации) И СтарыйОбъектАвторизации <> ОбъектАвторизации Тогда
			ВызватьИсключение "Невозможно изменить ранее указанный объект авторизации.";
		КонецЕсли;
	КонецЕсли;

	ПользователиСервер.сНачатьОбработкуПользователяИБ(ЭтотОбъект, ПараметрыОбработкиПользователяИБ);
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	// Обновление состава группы нового внешнего пользователя (если задана).
	Если ДополнительныеСвойства.Свойство("ГруппаНовогоВнешнегоПользователя") И ЗначениеЗаполнено(ДополнительныеСвойства.ГруппаНовогоВнешнегоПользователя) Тогда
		Блокировка			= Новый БлокировкаДанных;
		ЭлементБлокировки	= Блокировка.Добавить("Справочник.ГруппыВнешнихПользователей");
		Блокировка.Заблокировать();

		ОбъектГруппы										= ДополнительныеСвойства.ГруппаНовогоВнешнегоПользователя.ПолучитьОбъект();
		ОбъектГруппы.Состав.Добавить().ВнешнийПользователь	= Ссылка;
		ОбъектГруппы.Записать();
	КонецЕсли;

	// Обновление состава автоматической группы "Все внешние пользователи".
	УчастникиИзменений = Новый Соответствие;
	ИзмененныеГруппы   = Новый Соответствие;

	ПользователиСервер.сОбновитьСоставыГруппВнешнихПользователей(Справочники.ГруппыВнешнихПользователей.ВсеВнешниеПользователи, Ссылка, УчастникиИзменений, ИзмененныеГруппы);
	ПользователиСервер.сОбновитьИспользуемостьСоставовГруппПользователей(Ссылка, УчастникиИзменений, ИзмененныеГруппы);
	ПользователиСервер.сЗавершитьОбработкуПользователяИБ(ЭтотОбъект, ПараметрыОбработкиПользователяИБ);
	ПользователиСервер.сПослеОбновленияСоставовГруппВнешнихПользователей(УчастникиИзменений, ИзмененныеГруппы);

	Если СтарыйОбъектАвторизации <> ОбъектАвторизации Тогда
		ИнтеграцияПодсистемСервер.ПослеИзмененияОбъектаАвторизацииВнешнегоПользователя(Ссылка, СтарыйОбъектАвторизации, ОбъектАвторизации);
	КонецЕсли;

	ПользователиСервер.сВключитьЗаданиеКонтрольАктивностиПользователейПриНеобходимости(Ссылка);

	ИнтеграцияПодсистемСервер.ПослеДобавленияИзмененияПользователяИлиГруппы(Ссылка, ЭтоНовый);
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	// Требуется удалить пользователя ИБ, иначе он попадет в список ошибок в форме ПользователиИБ,
	// кроме того, вход под этим пользователем ИБ приведет к ошибке.

	ОписаниеПользователяИБ = Новый Структура;
	ОписаниеПользователяИБ.Вставить("Действие",					"Удалить");
	ДополнительныеСвойства.Вставить("ОписаниеПользователяИБ",	ОписаниеПользователяИБ);

	ПользователиСервер.сНачатьОбработкуПользователяИБ(ЭтотОбъект, ПараметрыОбработкиПользователяИБ, Истина);
	ПользователиСервер.сЗавершитьОбработкуПользователяИБ(ЭтотОбъект, ПараметрыОбработкиПользователяИБ);
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ДополнительныеСвойства.Вставить("ЗначениеКопирования", ОбъектКопирования.Ссылка);

	ИдентификаторПользователяИБ = Неопределено;
	Подготовлен = Ложь;

	Комментарий = "";
КонецПроцедуры

#КонецОбласти

#КонецЕсли