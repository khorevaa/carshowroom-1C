#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ПараметрыОбработкиПользователяИБ; // Параметры, заполняемые при обработке пользователя ИБ.
                                        // Используются в обработчике события ПриЗаписи.

Перем ЭтоНовый; // Показывает, что был записан новый объект.
                // Используются в обработчике события ПриЗаписи.

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ЭтоНовый = ЭтоНовый();

	ПользователиСервер.сНачатьОбработкуПользователяИБ(ЭтотОбъект, ПараметрыОбработкиПользователяИБ);
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.Свойство("ГруппаНовогоПользователя") И ЗначениеЗаполнено(ДополнительныеСвойства.ГруппаНовогоПользователя) Тогда
		Блокировка			= Новый БлокировкаДанных;
		ЭлементБлокировки	= Блокировка.Добавить("Справочник.ГруппыПользователей");
		Блокировка.Заблокировать();

		ОбъектГруппы								= ДополнительныеСвойства.ГруппаНовогоПользователя.ПолучитьОбъект();
		ОбъектГруппы.Состав.Добавить().Пользователь = Ссылка;
		ОбъектГруппы.Записать();
	КонецЕсли;

	// Обновление состава автоматической группы "Все пользователи".
	УчастникиИзменений = Новый Соответствие;
	ИзмененныеГруппы   = Новый Соответствие;

	ПользователиСервер.сОбновитьСоставыГруппПользователей(Справочники.ГруппыПользователей.ВсеПользователи, Ссылка, УчастникиИзменений, ИзмененныеГруппы);
	ПользователиСервер.сОбновитьИспользуемостьСоставовГруппПользователей(Ссылка, УчастникиИзменений, ИзмененныеГруппы);
	ПользователиСервер.сЗавершитьОбработкуПользователяИБ(ЭтотОбъект, ПараметрыОбработкиПользователяИБ);
	ПользователиСервер.сПослеОбновленияСоставовГруппПользователей(УчастникиИзменений, ИзмененныеГруппы);
	ПользователиСервер.сВключитьЗаданиеКонтрольАктивностиПользователейПриНеобходимости(Ссылка);

	ИнтеграцияПодсистемСервер.ПослеДобавленияИзмененияПользователяИлиГруппы(Ссылка, ЭтоНовый);

	ВариантыОтчетовСервер.ПриУдаленииПользователя(ЭтотОбъект, Отказ);
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбщиеДействияПередУдалениемВОбычномРежимеИПриОбменеДанными();
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ДополнительныеСвойства.Вставить("ЗначениеКопирования", ОбъектКопирования.Ссылка);

	ИдентификаторПользователяИБ	= Неопределено;
	Подготовлен					= Ложь;

	КонтактнаяИнформация.Очистить();
	Комментарий					= "";
КонецПроцедуры

#КонецОбласти

Процедура ОбщиеДействияПередУдалениемВОбычномРежимеИПриОбменеДанными() Экспорт
	// Требуется удалить пользователя ИБ, иначе он попадет в список ошибок в форме ПользователиИБ,
	// кроме того, вход под этим пользователем ИБ приведет к ошибке.

	ОписаниеПользователяИБ = Новый Структура;
	ОписаниеПользователяИБ.Вставить("Действие",					"Удалить");
	ДополнительныеСвойства.Вставить("ОписаниеПользователяИБ",	ОписаниеПользователяИБ);

	ПользователиСервер.сНачатьОбработкуПользователяИБ(ЭтотОбъект, ПараметрыОбработкиПользователяИБ, Истина);
	ПользователиСервер.сЗавершитьОбработкуПользователяИБ(ЭтотОбъект, ПараметрыОбработкиПользователяИБ);
КонецПроцедуры

#КонецЕсли
