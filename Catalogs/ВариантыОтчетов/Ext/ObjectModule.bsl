#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	ИсключаемыеРеквизиты = Новый Массив;

	Если Не Пользовательский Тогда
		ИсключаемыеРеквизиты.Добавить("Автор");
	КонецЕсли;

	БазоваяПодсистемаСервер.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, ИсключаемыеРеквизиты);

	Если Наименование <> "" И ВариантыОтчетовСервер.НаименованиеЗанято(Отчет, Ссылка, Наименование) Тогда
		Отказ = Истина;
		БазоваяПодсистемаКлиентСервер.СообщитьПользователю(СтрШаблон("""%1"" занято, необходимо указать другое наименование.", Наименование), , "Наименование");
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если ДополнительныеСвойства.Свойство("ЗаполнениеПредопределенных") Тогда
		ПроверитьЗаполнениеПредопределенного(Отказ);
	КонецЕсли;
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ПользователемИзмененаПометкаУдаления = (Не ЭтоНовый() И ПометкаУдаления <> Ссылка.ПометкаУдаления И Не ДополнительныеСвойства.Свойство("ЗаполнениеПредопределенных"));

	Если Не Пользовательский И ПользователемИзмененаПометкаУдаления Тогда
		Если ПометкаУдаления Тогда
			ТекстОшибки = "Пометка на удаление предопределенного варианта отчета запрещена.";
		Иначе
			ТекстОшибки = "Снятие пометки удаления предопределенного варианта отчета запрещена.";
		КонецЕсли;

		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

	Если Не ПометкаУдаления И ПользователемИзмененаПометкаУдаления Тогда
		НаименованиеЗанято = ВариантыОтчетовСервер.НаименованиеЗанято(Отчет, Ссылка, Наименование);
		КлючВариантаЗанят  = ВариантыОтчетовСервер.КлючВариантаЗанят(Отчет, Ссылка, КлючВарианта);
		Если НаименованиеЗанято ИЛИ КлючВариантаЗанят Тогда
			ТекстОшибки = "Ошибка снятия пометки удаления варианта отчета:";
			Если НаименованиеЗанято Тогда
				ТекстОшибки = ТекстОшибки + СтрШаблон("Наименование ""%1"" уже занято другим вариантом этого отчета.", Наименование);
			Иначе
				ТекстОшибки = ТекстОшибки + СтрШаблон("Ключ варианта ""%1"" уже занят другим вариантом этого отчета.", КлючВарианта);
			КонецЕсли;
			ТекстОшибки = ТекстОшибки + "Перед снятием пометки удаления варианта отчета
				|необходимо установить пометку удаления конфликтующего варианта отчета.";

			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
	КонецЕсли;

	Если ПользователемИзмененаПометкаУдаления Тогда
		Если Пользовательский Тогда
			ИнтерактивнаяПометкаУдаления = ПометкаУдаления;
		Иначе
			ИнтерактивнаяПометкаУдаления = Ложь;
		КонецЕсли;
	КонецЕсли;

	// Удаление из табличной части подсистем, помеченных на удаление.
	МассивУдаляемыхСтрок = Новый Массив;
	Для Каждого СтрокаРазмещения Из Размещение Цикл
		Если СтрокаРазмещения.Подсистема.ПометкаУдаления = Истина Тогда
			МассивУдаляемыхСтрок.Добавить(СтрокаРазмещения);
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаРазмещения Из МассивУдаляемыхСтрок Цикл
		Размещение.Удалить(СтрокаРазмещения);
	КонецЦикла;

	// Заполнение реквизитов "НаименованияПолей" и "НаименованияПараметровИОтборов".
	ПроиндексироватьНастройки();
КонецПроцедуры

#КонецОбласти

Процедура ПроиндексироватьНастройки()
	Дополнительный = (ТипОтчета = Перечисления.ТипыОтчетов.Дополнительный);
	Если Не Пользовательский И Не Дополнительный Тогда
		// Для предопределенных вариантов отчетов данные хранятся в неразделенном справочнике.
		НаименованияПолей				= "";
		НаименованияПараметровИОтборов	= "";

		Возврат;
	КонецЕсли;
	Если Дополнительный И БезопасныйРежим() = Ложь Тогда
		Возврат; // Оставить текущие настройки.
	КонецЕсли;
	Попытка
		ВариантыОтчетовСервер.ПроиндексироватьСодержимоеСхемы(ЭтотОбъект);
	Исключение
		ТекстОшибки = СтрШаблон("Не удалось проиндексировать схему варианта ""%1"" отчета ""%2"":", КлючВарианта, Строка(Отчет));
		ТекстОшибки = ТекстОшибки + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации("Варианты отчетов", УровеньЖурналаРегистрации.Ошибка, Метаданные.Справочники.ВариантыОтчетов, Ссылка, ТекстОшибки);
	КонецПопытки;
КонецПроцедуры

// Базовые проверки корректности данных предопределенных вариантов отчетов.
Процедура ПроверитьЗаполнениеПредопределенного(Отказ)
	Если ПометкаУдаления Или Не Предопределенный Тогда
		Возврат;
	ИначеЕсли Не ЗначениеЗаполнено(Отчет) Тогда
		ТекстОшибки = "Не заполнено поле ""Отчет""";
	ИначеЕсли Не ЗначениеЗаполнено(ТипОтчета) Тогда
		ТекстОшибки = "Не заполнено поле ""ТипОтчета""";
	ИначеЕсли ТипОтчета <> ВариантыОтчетовКлиентСервер.ТипОтчета(Отчет) Тогда
		ТекстОшибки = "Противоречивые значения полей ""%1"" и ""%2""";
		ТекстОшибки = СтрШаблон(ТекстОшибки, "ТипОтчета", "Отчет");
	ИначеЕсли Не ЗначениеЗаполнено(ПредопределенныйВариант) И (ТипОтчета = Перечисления.ТипыОтчетов.Внутренний Или ТипОтчета = Перечисления.ТипыОтчетов.Расширение) Тогда
		ТекстОшибки = "Не заполнено поле ""ПредопределенныйВариант""";
	Иначе
		Возврат;
	КонецЕсли;

	ВызватьИсключение ТекстОшибки;
КонецПроцедуры

#КонецЕсли
