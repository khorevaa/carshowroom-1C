////////////////////////////////////////////////////////////////////////////////
// Подсистема "Варианты отчетов"
//
////////////////////////////////////////////////////////////////////////////////

// Формирует список отчетов конфигурации, доступных текущему пользователю.
// Его следует использовать во всех запросах к таблице
// справочника "ВариантыОтчетов" как отбор по реквизиту "Отчет".
//
// Возвращаемое значение:
//   Массив - ссылки отчетов, доступных текущему пользователю.
//            Тип элементов см. в реквизите Справочники.ВариантыОтчетов.Реквизиты.Отчет.
//
Функция ДоступныеОтчеты(ПроверятьФункциональныеОпции = Истина) Экспорт
	Результат = Новый Массив;
	ПолныеИменаОтчетов = Новый Массив;

	УстановленныеРасширенияДоступны = Неопределено;
	ПоУмолчаниюВсеПодключены = Неопределено;
	Для Каждого ОтчетМетаданные Из Метаданные.Отчеты Цикл
		Если Не ПравоДоступа("Просмотр", ОтчетМетаданные)
			Или Не ВариантыОтчетовСервер.ОтчетПодключенКХранилищу(ОтчетМетаданные, ПоУмолчаниюВсеПодключены) Тогда
			Продолжить;
		КонецЕсли;
		Если ПроверятьФункциональныеОпции И БазоваяПодсистемаСерверПовтИсп.ДоступностьОбъектовПоОпциям()[ОтчетМетаданные.ПолноеИмя()] = Ложь Тогда
			Продолжить;
		КонецЕсли;
		ПолныеИменаОтчетов.Добавить(ОтчетМетаданные.ПолноеИмя());
	КонецЦикла;

	ИдентификаторыОтчетов = Справочники.ИдентификаторыОбъектовМетаданных.ИдентификаторыОбъектовМетаданных(ПолныеИменаОтчетов);
	Для Каждого ИдентификаторОтчета Из ИдентификаторыОтчетов Цикл
		Результат.Добавить(ИдентификаторОтчета.Значение);
	КонецЦикла;

	Возврат Результат;
КонецФункции

// Параметры подсистемы, закэшированные при обновлении.
Функция Параметры() Экспорт
	ПолноеИмяПодсистемы = "СтандартныеПодсистемы.ВариантыОтчетов";

	Параметры = РегистрыСведений.ПараметрыРаботыПрограммы.ПараметрРаботыПрограммы(ПолноеИмяПодсистемы);
	Если Параметры = Неопределено Тогда
		ВариантыОтчетовСервер.ОперативноеОбновлениеОбщихДанныхКонфигурации(Новый Структура("РазделенныеОбработчики"));
		Параметры = РегистрыСведений.ПараметрыРаботыПрограммы.ПараметрРаботыПрограммы(ПолноеИмяПодсистемы);
	КонецЕсли;

	Если ЗначениеЗаполнено(ПараметрыСеанса.ВерсияРасширений) Тогда
		ПараметрыРасширений = РегистрыСведений.ПараметрыРаботыВерсийРасширений.ПараметрРаботыРасширения(ПолноеИмяПодсистемы, Ложь);
		Если ПараметрыРасширений = Неопределено Тогда
			Если Не ПользователиСервер.ЭтоПолноправныйПользователь() Тогда
				УстановитьПривилегированныйРежим(Истина);
				Если Не ПривилегированныйРежим() Тогда
					ВызватьИсключение "Не удалось обновить вспомогательные данные расширений. Обратитесь к администратору.";
				КонецЕсли;
			КонецЕсли;
			Настройки = Новый Структура;
			Настройки.Вставить("Конфигурация",      Ложь);
			Настройки.Вставить("Расширения",        Истина);
			Настройки.Вставить("ОбщиеДанные",       Истина);
			Настройки.Вставить("РазделенныеДанные", Истина);
			Настройки.Вставить("Оперативное",       Истина);
			Настройки.Вставить("Отложенное",        Истина);
			Настройки.Вставить("Полное",            Истина);
			Обновление			= ВариантыОтчетовСервер.Обновить(Настройки);
			ПараметрыРасширений = РегистрыСведений.ПараметрыРаботыВерсийРасширений.ПараметрРаботыРасширения(ПолноеИмяПодсистемы, Ложь);
		КонецЕсли;
		Если ПараметрыРасширений <> Неопределено Тогда
			БазоваяПодсистемаКлиентСервер.ДополнитьМассив(Параметры.ОтчетыСНастройками, ПараметрыРасширений.ОтчетыСНастройками);
			БазоваяПодсистемаКлиентСервер.ДополнитьТаблицу(Параметры.ТаблицаФункциональныхОпций, ПараметрыРасширений.ТаблицаФункциональныхОпций);
		КонецЕсли;
	КонецЕсли;

	// Зарезервировано для новых подсистем

	Возврат Параметры;
КонецФункции
