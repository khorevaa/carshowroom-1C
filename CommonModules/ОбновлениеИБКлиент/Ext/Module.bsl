////////////////////////////////////////////////////////////////////////////////
// Подсистема "Обновление информационной базы"
//
////////////////////////////////////////////////////////////////////////////////

Процедура ПередНачаломРаботыСистемы(Параметры) Экспорт
	ПараметрыКлиента = БазоваяПодсистемаКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();

	Если ПараметрыКлиента.Свойство("ИнформационнаяБазаЗаблокированаДляОбновления") Тогда
		Кнопки					= Новый СписокЗначений;
		Кнопки.Добавить("Перезапустить",						"Перезапустить");
		Кнопки.Добавить("Завершить",							"Завершить работу");

		ПараметрыВопроса		= Новый Структура;
		ПараметрыВопроса.Вставить("КнопкаПоУмолчанию",			"Перезапустить");
		ПараметрыВопроса.Вставить("КнопкаТаймаута",				"Перезапустить");
		ПараметрыВопроса.Вставить("Таймаут",					60);

		ОписаниеПредупреждения	= Новый Структура;
		ОписаниеПредупреждения.Вставить("Кнопки",				Кнопки);
		ОписаниеПредупреждения.Вставить("ПараметрыВопроса",		ПараметрыВопроса);
		ОписаниеПредупреждения.Вставить("ТекстПредупреждения",	ПараметрыКлиента.ИнформационнаяБазаЗаблокированаДляОбновления);

		Параметры.Отказ = Истина;
		Параметры.ИнтерактивнаяОбработка = Новый ОписаниеОповещения("ПоказатьПредупреждениеИПродолжить", БазоваяПодсистемаКлиент.ЭтотОбъект, ОписаниеПредупреждения);
	КонецЕсли;
КонецПроцедуры

Процедура ПередНачаломРаботыСистемы2(Параметры) Экспорт
	ПараметрыКлиента = БазоваяПодсистемаКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	Если ПараметрыКлиента.Свойство("НеобходимоВыполнитьОбработчикиОтложенногоОбновления") Тогда
		Параметры.ИнтерактивнаяОбработка = Новый ОписаниеОповещения("ИнтерактивнаяОбработкаПроверкиСтатусаОтложенногоОбновления", ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

Процедура ПослеНачалаРаботыСистемы() Экспорт
	ПараметрыКлиента = БазоваяПодсистемаКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();

	Если ПараметрыКлиента.Свойство("ПоказатьСообщениеОбОшибочныхОбработчиках") Или ПараметрыКлиента.Свойство("ПоказатьОповещениеОНевыполненныхОбработчиках") Тогда
		ПодключитьОбработчикОжидания("ПроверитьСтатусОтложенногоОбновления", 2, Истина);
	КонецЕсли;
КонецПроцедуры

// Выводит оповещение пользователю о том, что отложенная обработка данных
// не выполнена.
//
Процедура ОповеститьОтложенныеОбработчикиНеВыполнены() Экспорт
	Если ПользователиКлиентСервер.ЭтоСеансВнешнегоПользователя() Тогда
		Возврат;
	КонецЕсли;

	ПоказатьОповещениеПользователя("Работа в программе временно ограничена", "e1cib/app/Обработка.РезультатыОбновленияПрограммы", "Не завершен переход на новую версию", БиблиотекаКартинок.Предупреждение);
КонецПроцедуры

Процедура ИнтерактивнаяОбработкаПроверкиСтатусаОтложенногоОбновления(Параметры, Контекст) Экспорт
	ОткрытьФорму("Обработка.РезультатыОбновленияПрограммы.Форма.ОтложенноеОбновлениеНеЗавершено", , , , , , Новый ОписаниеОповещения("ПослеЗакрытияФормыПроверкиСтатусаОтложенногоОбновления", ЭтотОбъект, Параметры));
КонецПроцедуры

Процедура ПослеЗакрытияФормыПроверкиСтатусаОтложенногоОбновления(Результат, Параметры) Экспорт
	Если Результат <> Истина Тогда
		Параметры.Отказ = Истина;
	КонецЕсли;

	ВыполнитьОбработкуОповещения(Параметры.ОбработкаПродолжения);
КонецПроцедуры