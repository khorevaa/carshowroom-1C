////////////////////////////////////////////////////////////////////////////////
// Подсистема "Пользователи"
//
////////////////////////////////////////////////////////////////////////////////

// Возвращает Истина, если вход в сеанс выполнил внешний пользователь.
//
// Возвращаемое значение:
//  Булево - Истина, если вход в сеанс выполнил внешний пользователь.
//
Функция ЭтоСеансВнешнегоПользователя() Экспорт
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	Возврат ПользователиСерверПовтИсп.ЭтоСеансВнешнегоПользователя();
#Иначе
	Возврат БазоваяПодсистемаКлиент.ПараметрКлиента("ЭтоСеансВнешнегоПользователя");
#КонецЕсли
КонецФункции

// Возвращает текущего пользователя или текущего внешнего пользователя,
// в зависимости от того, кто выполнил вход в сеанс.
//  Рекомендуется использовать в коде, который поддерживает работу в обоих случаях.
//
// Возвращаемое значение:
//  СправочникСсылка.Пользователи, СправочникСсылка.ВнешниеПользователи - пользователь
//    или внешний пользователь.
//
Функция АвторизованныйПользователь() Экспорт
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	УстановитьПривилегированныйРежим(Истина);

	Возврат ?(ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПользователь),
	          ПараметрыСеанса.ТекущийПользователь,
	          ПараметрыСеанса.ТекущийВнешнийПользователь);
#Иначе
	Возврат БазоваяПодсистемаКлиент.ПараметрКлиента("АвторизованныйПользователь");
#КонецЕсли
КонецФункции
