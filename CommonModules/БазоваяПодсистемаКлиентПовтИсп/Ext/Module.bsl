////////////////////////////////////////////////////////////////////////////////
// Подсистема "Базовая подсистема"
//
////////////////////////////////////////////////////////////////////////////////

Функция ПараметрыРаботыКлиентаПриЗапуске() Экспорт
	ПроверитьПорядокЗапускаПрограммыПередНачаломРаботыСистемы();
	
	ПараметрыПриЗапускеПрограммы = ПараметрыПриложения["СтандартныеПодсистемы.ПараметрыПриЗапускеПрограммы"];
	
	Параметры = Новый Структура;
	Параметры.Вставить("ПолученныеПараметрыКлиента", Неопределено);
	
	Если ПараметрыПриЗапускеПрограммы.Свойство("ПолученныеПараметрыКлиента")
	   И ТипЗнч(ПараметрыПриЗапускеПрограммы.ПолученныеПараметрыКлиента) = Тип("Структура") Тогда
		
		Параметры.Вставить("ПолученныеПараметрыКлиента", ПараметрыПриЗапускеПрограммы.ПолученныеПараметрыКлиента);
	КонецЕсли;
	
	Если ПараметрыПриЗапускеПрограммы.Свойство("ПропуститьОчисткуСкрытияРабочегоСтола") Тогда
		Параметры.Вставить("ПропуститьОчисткуСкрытияРабочегоСтола");
	КонецЕсли;
	
	#Если ВебКлиент Тогда
		ЭтоВебКлиент		= Истина;
		КаталогПрограммы	= "";
	#Иначе
		ЭтоВебКлиент		= Ложь;
		КаталогПрограммы	= КаталогПрограммы();
	#КонецЕсли
	
	ИспользуемыйКлиент = "";
	#Если ТонкийКлиент Тогда
		ИспользуемыйКлиент = "ТонкийКлиент";
	#ИначеЕсли ТолстыйКлиентУправляемоеПриложение Тогда
		ИспользуемыйКлиент = "ТолстыйКлиентУправляемоеПриложение";
	#ИначеЕсли ТолстыйКлиентОбычноеПриложение Тогда
		ИспользуемыйКлиент = "ТолстыйКлиентОбычноеПриложение";
	#ИначеЕсли ВебКлиент Тогда
		ОписаниеБраузера = ТекущийБраузер();
		Если ПустаяСтрока(ОписаниеБраузера.Версия) Тогда
			ИспользуемыйКлиент = СтрШаблон("ВебКлиент.%1", ОписаниеБраузера.Название);
		Иначе
			ИспользуемыйКлиент = СтрШаблон("ВебКлиент.%1.%2", ОписаниеБраузера.Название, СтрРазделить(ОписаниеБраузера.Версия, ".")[0]);
		КонецЕсли;
	#КонецЕсли
	
	СистемнаяИнформация	= Новый СистемнаяИнформация;
	ЭтоLinuxКлиент		= СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Linux_x86 Или СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Linux_x86_64;
	ЭтоOSXКлиент		= СистемнаяИнформация.ТипПлатформы = ТипПлатформы.MacOS_x86 Или СистемнаяИнформация.ТипПлатформы = ТипПлатформы.MacOS_x86_64;
	ЭтоWindowsКлиент	= СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86 Или СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86_64;
	
	Параметры.Вставить("ПараметрЗапуска",      ПараметрЗапуска);
	Параметры.Вставить("СтрокаСоединенияИнформационнойБазы", СтрокаСоединенияИнформационнойБазы());
	Параметры.Вставить("ЭтоВебКлиент",         ЭтоВебКлиент);
	Параметры.Вставить("ЭтоВебКлиентПодMacOS", БазоваяПодсистемаКлиентПовтИсп.ЭтоВебКлиентПодMacOS());
	Параметры.Вставить("ЭтоLinuxКлиент",       ЭтоLinuxКлиент);
	Параметры.Вставить("ЭтоOSXКлиент",         ЭтоOSXКлиент);
	Параметры.Вставить("ЭтоWindowsКлиент",     ЭтоWindowsКлиент);
	Параметры.Вставить("ИспользуемыйКлиент",   ИспользуемыйКлиент);
	Параметры.Вставить("КаталогПрограммы",     КаталогПрограммы);
	Параметры.Вставить("ИдентификаторКлиента", СистемнаяИнформация.ИдентификаторКлиента);
	Параметры.Вставить("СкрытьРабочийСтолПриНачалеРаботыСистемы", Ложь);

	ОперативнаяПамять = Окр(СистемнаяИнформация.ОперативнаяПамять / 1024, 1);
	Параметры.Вставить("ОперативнаяПамять", ОперативнаяПамять);
	
	// Установка даты клиента непосредственно перед вызовом, чтобы уменьшить погрешность.
	Параметры.Вставить("ТекущаяДатаНаКлиенте", ТекущаяДата()); // Для расчета ПоправкаКВремениСеанса.
	Параметры.Вставить("ТекущаяУниверсальнаяДатаВМиллисекундахНаКлиенте", ТекущаяУниверсальнаяДатаВМиллисекундах());
	
	ПараметрыКлиента = БазоваяПодсистемаВызовСервера.ПараметрыРаботыКлиентаПриЗапуске(Параметры);

	Если ПараметрыПриЗапускеПрограммы.Свойство("ПолученныеПараметрыКлиента")
	   И ПараметрыПриЗапускеПрограммы.ПолученныеПараметрыКлиента <> Неопределено
	   И Не ПараметрыПриЗапускеПрограммы.Свойство("ОпцииИнтерфейса") Тогда
		
		ПараметрыПриЗапускеПрограммы.Вставить("ОпцииИнтерфейса", ПараметрыКлиента.ОпцииИнтерфейса);
		ПараметрыПриЗапускеПрограммы.ПолученныеПараметрыКлиента.Вставить("ОпцииИнтерфейса");
	КонецЕсли;

	БазоваяПодсистемаКлиент.ЗаполнитьПараметрыКлиента(ПараметрыКлиента);
	
	// Обновление состояния скрытия рабочего стола на клиенте по состоянию на сервере.
	БазоваяПодсистемаКлиент.СкрытьРабочийСтолПриНачалеРаботыСистемы(Параметры.СкрытьРабочийСтолПриНачалеРаботыСистемы, Истина);
	
	Возврат ПараметрыКлиента;
КонецФункции

Процедура ПроверитьПорядокЗапускаПрограммыПередНачаломРаботыСистемы()	
	ИмяПараметра = "СтандартныеПодсистемы.ЗапускПрограммыЗавершен";
	Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
		ВызватьИсключение
			"Ошибка порядка запуска программы.
           |Первой процедурой, которая вызывается из обработчика события ПередНачаломРаботыСистемы
           |должна быть процедура БазоваяПодсистемаКлиент.ПередНачаломРаботыСистемы.";
	КонецЕсли;
КонецПроцедуры

Функция ЭтоВебКлиентПодMacOS() Экспорт
#Если Не ВебКлиент Тогда
	Возврат Ложь;  // Только в веб клиенте этот код работает.
#КонецЕсли

	СистемнаяИнформация = Новый СистемнаяИнформация;
	Если СтрНайти(СистемнаяИнформация.ИнформацияПрограммыПросмотра, "Macintosh") <> 0 Тогда
		Возврат Истина;
	КонецЕсли;

	Возврат Ложь;
КонецФункции
