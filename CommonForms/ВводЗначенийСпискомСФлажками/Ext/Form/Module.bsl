#Область ОписаниеПеременных

&НаКлиенте
Перем ЭлементСпискаДоНачалаИзменения;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Параметры.Свойство("ОграничиватьВыборУказаннымиЗначениями", ОграничиватьВыборУказаннымиЗначениями);
	БыстрыйВыбор		= БазоваяПодсистемаКлиентСервер.СвойствоСтруктуры(Параметры, "БыстрыйВыбор", Ложь);

	ИнформацияОТипах	= ВариантыОтчетовКлиентСервер.АнализТипов(Параметры.ОписаниеТипов, Истина);
	ИнформацияОТипах.Вставить("СодержитСсылочныеТипы", Ложь);

	ВсеТипыСБыстрымВыбором = ИнформацияОТипах.КоличествоТипов < 10 И (ИнформацияОТипах.КоличествоТипов = ИнформацияОТипах.ОбъектныеТипы.Количество());
	Для Каждого Тип Из ИнформацияОТипах.ОбъектныеТипы Цикл
		ОбъектМетаданных = Метаданные.НайтиПоТипу(Тип);
		Если ОбъектМетаданных = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		ИнформацияОТипах.СодержитСсылочныеТипы = Истина;

		Вид = ВРег(СтрРазделить(ОбъектМетаданных.ПолноеИмя(), ".")[0]);
		Если Вид <> "ПЕРЕЧИСЛЕНИЕ" Тогда
			Если Вид = "СПРАВОЧНИК" Или Вид = "ПЛАНВИДОВРАСЧЕТА" Или Вид = "ПЛАНВИДОВХАРАКТЕРИСТИК" Или Вид = "ПЛАНОБМЕНА" Или Вид = "ПЛАНСЧЕТОВ" Тогда
				Если ОбъектМетаданных.СпособВыбора <> Метаданные.СвойстваОбъектов.СпособВыбора.БыстрыйВыбор Тогда
					ВсеТипыСБыстрымВыбором = Ложь;
				КонецЕсли;
			Иначе
				ВсеТипыСБыстрымВыбором = Ложь;
			КонецЕсли;
		КонецЕсли;

		Если Не ВсеТипыСБыстрымВыбором Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;

	ЗначенияДляВыбора	= БазоваяПодсистемаКлиентСервер.СвойствоСтруктуры(Параметры, "ЗначенияДляВыбора");
	Отмеченные			= БазоваяПодсистемаКлиентСервер.СвойствоСтруктуры(Параметры, "Отмеченные");

	Если ВсеТипыСБыстрымВыбором Тогда
		БыстрыйВыбор = Истина;
	КонецЕсли;

	Если Не ОграничиватьВыборУказаннымиЗначениями И БыстрыйВыбор И Не Параметры.ЗначенияДляВыбораЗаполнены Тогда
		ЗначенияДляВыбора = БазоваяПодсистемаСервер.ЗначенияДляВыбора(Параметры);
	КонецЕсли;

	Заголовок = БазоваяПодсистемаКлиентСервер.СвойствоСтруктуры(Параметры, "Представление");
	Если ПустаяСтрока(Заголовок) Тогда
		Заголовок = Строка(Параметры.ОписаниеТипов);
	КонецЕсли;

	Если ИнформацияОТипах.КоличествоТипов = 0 Тогда
		ОграничиватьВыборУказаннымиЗначениями			= Истина;
	ИначеЕсли Не ИнформацияОТипах.СодержитОбъектныеТипы Или БыстрыйВыбор Тогда
		Элементы.СписокПодбор.Видимость					= Ложь;
		Элементы.СписокПодборМеню.Видимость				= Ложь;
		Элементы.СписокПодборПодвал.Видимость			= Ложь;
		Элементы.СписокДобавить.ТолькоВоВсехДействиях	= Ложь;
	КонецЕсли;

	ВыборГруппИЭлементов							= БазоваяПодсистемаКлиентСервер.СвойствоСтруктуры(Параметры, "ВыборГруппИЭлементов");
	Элементы.СписокЗначение.ВыборГруппИЭлементов	= ВариантыОтчетовКлиентСервер.ПривестиЗначениеКТипуГруппыИЭлементы(ВыборГруппИЭлементов);

	Список.ТипЗначения = ИнформацияОТипах.ОписаниеТиповДляФормы;
	Если ТипЗнч(ЗначенияДляВыбора) = Тип("СписокЗначений") Тогда
		ЗначенияДляВыбора.ЗаполнитьПометки(Ложь);
		ВариантыОтчетовКлиентСервер.ДополнитьСписок(Список, ЗначенияДляВыбора, Истина, Истина);
	КонецЕсли;
	Если ТипЗнч(Отмеченные) = Тип("СписокЗначений") Тогда
		Отмеченные.ЗаполнитьПометки(Истина);
		ВариантыОтчетовКлиентСервер.ДополнитьСписок(Список, Отмеченные, Истина, Не ОграничиватьВыборУказаннымиЗначениями);
	КонецЕсли;

	Если Список.Количество() = 0 Тогда
		Элементы.СписокПодборПодвал.Видимость = Ложь;
	КонецЕсли;

	Если ОграничиватьВыборУказаннымиЗначениями Тогда
		Элементы.СписокЗначение.ТолькоПросмотр = Истина;
		Элементы.Список.ИзменятьСоставСтрок    = Ложь;

		Элементы.СписокДобавлениеУдаление.Видимость     = Ложь;
		Элементы.СписокДобавлениеУдалениеМеню.Видимость = Ложь;

		Элементы.СписокСортировка.Видимость     = Ложь;
		Элементы.СписокСортировкаМеню.Видимость = Ложь;

		Элементы.СписокПеремещение.Видимость     = Ложь;
		Элементы.СписокПеремещениеМеню.Видимость = Ложь;

		Элементы.СписокПодборПодвал.Видимость = Ложь;
	КонецЕсли;

	ПараметрыВыбора = БазоваяПодсистемаКлиентСервер.СвойствоСтруктуры(Параметры, "ПараметрыВыбора");
	Если ТипЗнч(ПараметрыВыбора) = Тип("Массив") Тогда
		Элементы.СписокЗначение.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	КонецЕсли;

	КлючСохраненияПоложенияОкна = БазоваяПодсистемаКлиентСервер.СвойствоСтруктуры(Параметры, "КлючУникальности");
	Если ПустаяСтрока(КлючСохраненияПоложенияОкна) Тогда
		КлючСохраненияПоложенияОкна = Строка(Список.ТипЗначения);
	КонецЕсли;

	Если ОграничиватьВыборУказаннымиЗначениями Или Не ИнформацияОТипах.СодержитСсылочныеТипы Тогда
		// Зарезервировано для новых подсистем
		Элементы.СписокВставитьИзБуфераОбмена.Видимость     = Ложь;
		Элементы.СписокВставитьИзБуфераОбменаМеню.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	СтрокаИдентификатор = Элемент.ТекущаяСтрока;
	Если СтрокаИдентификатор = Неопределено Тогда
		Возврат;
	КонецЕсли;

	СписокЗначенийВФорме	= ЭтотОбъект[Элемент.Имя];
	ЭлементСпискаВФорме		= СписокЗначенийВФорме.НайтиПоИдентификатору(СтрокаИдентификатор);

	ТекущаяСтрока = Элемент.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЭлементСпискаДоНачалаИзменения					= Новый Структура("Идентификатор, Пометка, Значение, Представление");
	ЗаполнитьЗначенияСвойств(ЭлементСпискаДоНачалаИзменения, ЭлементСпискаВФорме);
	ЭлементСпискаДоНачалаИзменения.Идентификатор	= СтрокаИдентификатор;
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если ОграничиватьВыборУказаннымиЗначениями Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	Если ОграничиватьВыборУказаннымиЗначениями Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаНачалаРедактирования, ОтменаЗавершенияРедактирования)
	Если ОтменаНачалаРедактирования Тогда
		Возврат;
	КонецЕсли;

	СтрокаИдентификатор = Элемент.ТекущаяСтрока;
	Если СтрокаИдентификатор = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СписокЗначенийВФорме	= ЭтотОбъект[Элемент.Имя];
	ЭлементСпискаВФорме		= СписокЗначенийВФорме.НайтиПоИдентификатору(СтрокаИдентификатор);

	Значение = ЭлементСпискаВФорме.Значение;
	Если Значение = Неопределено Или Значение = Тип("Неопределено") Или Значение = Новый ОписаниеТипов("Неопределено") Или Не ЗначениеЗаполнено(Значение) Тогда
		ОтменаЗавершенияРедактирования = Истина; // Запрет пустых значений.
	Иначе
		Для Каждого ЭлементСпискаДубльВФорме Из СписокЗначенийВФорме Цикл
			Если ЭлементСпискаДубльВФорме.Значение = Значение И ЭлементСпискаДубльВФорме <> ЭлементСпискаВФорме Тогда
				ОтменаЗавершенияРедактирования = Истина; // Запрет дублей.

				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	ЕстьИнформация = (ЭлементСпискаДоНачалаИзменения <> Неопределено И ЭлементСпискаДоНачалаИзменения.Идентификатор = СтрокаИдентификатор);
	Если Не ОтменаЗавершенияРедактирования И ЕстьИнформация И ЭлементСпискаДоНачалаИзменения.Значение <> Значение Тогда
		Если ОграничиватьВыборУказаннымиЗначениями Тогда
			ОтменаЗавершенияРедактирования = Истина;
		Иначе
			ЭлементСпискаВФорме.Представление	= ""; // Автозаполнение представления.
			ЭлементСпискаВФорме.Пометка			= Истина; // Включение флажка.
		КонецЕсли;
	КонецЕсли;

	Если ОтменаЗавершенияРедактирования Тогда
		// Откат значений.
		Если ЕстьИнформация Тогда
			ЗаполнитьЗначенияСвойств(ЭлементСпискаВФорме, ЭлементСпискаДоНачалаИзменения);
		КонецЕсли;
		// Перезапуск события "ПередОкончаниемРедактирования" с ОтменаНачалаРедактирования = Истина.
		Элемент.ЗакончитьРедактированиеСтроки(Истина);
	Иначе
		Если НоваяСтрока Тогда
			ЭлементСпискаВФорме.Пометка = Истина; // Включение флажка.
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаВыбора(Элемент, РезультатВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Выбранные = БазоваяПодсистемаКлиентСервер.ЗначенияСписком(РезультатВыбора);
	Выбранные.ЗаполнитьПометки(Истина);

	Дополнение = БазоваяПодсистемаКлиентСервер.ДополнитьСписок(Список, Выбранные, Истина, Истина);
	Если Дополнение.Всего = 0 Тогда
		Возврат;
	КонецЕсли;
	Если Дополнение.Всего = 1 Тогда
		ЗаголовокОповещения = "Элемент добавлен в список";
	Иначе
		ЗаголовокОповещения = "Элементы добавлены в список";
	КонецЕсли;
	ПоказатьОповещениеПользователя(ЗаголовокОповещения, , Строка(Выбранные), БиблиотекаКартинок.ВыполнитьЗадачу);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	Если МодальныйРежим Или РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс Или ВладелецФормы = Неопределено Тогда
		Закрыть(Список);
	Иначе
		ОповеститьОВыборе(Список);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВставитьИзБуфераОбмена(Команда)
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить("ОписаниеТипов",		Список.ТипЗначения);
	ПараметрыПоиска.Вставить("ПараметрыВыбора",		Элементы.СписокЗначение.ПараметрыВыбора);
	ПараметрыПоиска.Вставить("ПредставлениеПоля",	Заголовок);
	ПараметрыПоиска.Вставить("Сценарий",			"ПоискСсылок");

	ПараметрыВыполнения	= Новый Структура;
	Обработчик			= Новый ОписаниеОповещения("ВставитьИзБуфераОбменаЗавершение", ЭтотОбъект, ПараметрыВыполнения);

	// Зарезервировано для новых подсистем
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ВставитьИзБуфераОбменаЗавершение(НайденныеОбъекты, ПараметрыВыполнения) Экспорт
	Если НайденныеОбъекты = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Для Каждого Значение Из НайденныеОбъекты Цикл
		ВариантыОтчетовКлиентСервер.ДобавитьУникальноеЗначениеВСписок(Список, Значение, Неопределено, Истина);
	КонецЦикла;
КонецПроцедуры
