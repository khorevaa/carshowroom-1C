#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Процедура обновляет все данные регистра.
//
// Параметры:
//  ЕстьИзменения - Булево (возвращаемое значение) - если производилась запись,
//                  устанавливается Истина, иначе не изменяется.
//
Процедура ОбновитьДанныеРегистра(ЕстьИзменения = Неопределено) Экспорт
	УстановитьПривилегированныйРежим(Истина);

	Блокировка			= Новый БлокировкаДанных;
	ЭлементБлокировки	= Блокировка.Добавить("РегистрСведений.СоставыГруппПользователей");

	НачатьТранзакцию();
	Попытка
		Блокировка.Заблокировать();

		// Обновление связей пользователей.
		УчастникиИзменений = Новый Соответствие;
		ИзмененныеГруппы   = Новый Соответствие;

		Выборка = Справочники.ГруппыПользователей.Выбрать();
		Пока Выборка.Следующий() Цикл
			ПользователиСервер.сОбновитьСоставыГруппПользователей(Выборка.Ссылка, , УчастникиИзменений, ИзмененныеГруппы);
		КонецЦикла;

		// Обновление связей внешних пользователей.
		Выборка = Справочники.ГруппыВнешнихПользователей.Выбрать();
		Пока Выборка.Следующий() Цикл
			ПользователиСервер.сОбновитьСоставыГруппВнешнихПользователей(Выборка.Ссылка, , УчастникиИзменений, ИзмененныеГруппы);
		КонецЦикла;

		Если УчастникиИзменений.Количество() > 0 ИЛИ ИзмененныеГруппы.Количество() > 0 Тогда
			ЕстьИзменения = Истина;

			ПользователиСервер.сПослеОбновленияСоставовГруппПользователей(УчастникиИзменений, ИзмененныеГруппы);
		КонецЕсли;

		ПользователиСервер.сОбновитьРолиВнешнихПользователей();

		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();

		ВызватьИсключение;
	КонецПопытки;
КонецПроцедуры

#КонецЕсли