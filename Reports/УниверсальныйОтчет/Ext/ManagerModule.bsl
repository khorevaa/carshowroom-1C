#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	НастройкиОтчета.ОпределитьНастройкиФормы = Истина;

	ВариантыОтчетовСервер.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, НастройкиОтчета, Ложь);

	НастройкиВарианта			= ВариантыОтчетовСервер.ОписаниеВарианта(Настройки, НастройкиОтчета, "Основной");
	НастройкиВарианта.Описание	= "Универсальный отчет по справочникам, документам, регистрам.";
КонецПроцедуры

Процедура НастройкиКДПоУмолчаниюТиповойСхемы(ОтчетОбъект, ПараметрыОтчета, НастройкиКД, НовыеПользовательскиеНастройкиКД) Экспорт
	Если Не НастройкиКД.ДополнительныеСвойства.Свойство("ОтчетИнициализирован") Или (НастройкиКД.ДополнительныеСвойства.Свойство("ОтчетИнициализирован") И Не НастройкиКД.ДополнительныеСвойства.ОтчетИнициализирован) Тогда
		СхемаКД = ОтчетОбъект.СхемаКомпоновкиДанных;
		ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКД.НастройкиПоУмолчанию);

		НастройкиКД	= ОтчетОбъект.КомпоновщикНастроек.Настройки;

		НастройкиКД.Выбор.Элементы.Очистить();
		НастройкиКД.Структура.Очистить();

		ДобавитьПоказатели(ПараметрыОтчета, НастройкиКД);
		ПередКомпоновкойМакета(СхемаКД, НастройкиКД);

		ПараметрОтчета			= НастройкиКД.ПараметрыДанных.Элементы.Найти("ТипОбъектаМетаданных");
		ПараметрОтчета.Значение = ПараметрыОтчета.ТипОбъектаМетаданных;

		ПараметрОтчета			= НастройкиКД.ПараметрыДанных.Элементы.Найти("ПолноеИмяОбъектаМетаданных");
		ПараметрОтчета.Значение = ПараметрыОтчета.ПолноеИмяОбъектаМетаданных;

		ПараметрОтчета			= НастройкиКД.ПараметрыДанных.Элементы.Найти("ИмяТаблицы");
		ПараметрОтчета.Значение = ПараметрыОтчета.ИмяТаблицы;

		НастройкиКД.ДополнительныеСвойства.Вставить("ОтчетИнициализирован", Истина);
	КонецЕсли;
КонецПроцедуры

Процедура ПередКомпоновкойМакета(Схема, Настройки)
	Настройки.Структура.Очистить();

	Структура = Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	Структура.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	Структура.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
КонецПроцедуры

Функция ИзвлечьСхемуИзДвоичныхДанных(ЗагруженнаяСхема) Экспорт
	ПолноеИмяФайла	= ПолучитьИмяВременногоФайла();
	ЗагруженнаяСхема.Записать(ПолноеИмяФайла);
	ЧтениеXML		= Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ПолноеИмяФайла);
	СхемаКД			= СериализаторXDTO.ПрочитатьXML(ЧтениеXML, Тип("СхемаКомпоновкиДанных"));
	ЧтениеXML.Закрыть();
	ЧтениеXML		= Неопределено;
	УдалитьФайлы(ПолноеИмяФайла);

	Если СхемаКД.НастройкиПоУмолчанию.ДополнительныеСвойства.Свойство("СхемаКомпоновкиДанных") Тогда
		СхемаКД.НастройкиПоУмолчанию.ДополнительныеСвойства.СхемаКомпоновкиДанных = Неопределено;
	КонецЕсли;

	Возврат СхемаКД;
КонецФункции

Функция ПараметрыОтчета(НастройкиКД, ПользовательскиеНастройкиКД) Экспорт
	Результат = Новый Структура("ТипОбъектаМетаданных, ПолноеИмяОбъектаМетаданных, ИмяТаблицы, ОчиститьСтруктуру");

	// Поиск параметров в настройках.

	ПараметрТипОбъектаМетаданных		= Неопределено;
	ПараметрПолноеИмяОбъектаМетаданных	= Неопределено;
	ПараметрИмяТаблицы					= Неопределено;
	Результат.ОчиститьСтруктуру			= Ложь;

	Если НастройкиКД.ДополнительныеСвойства.Свойство("ОтчетИнициализирован") Тогда
		Если ТипЗнч(ПользовательскиеНастройкиКД) = Тип("ПользовательскиеНастройкиКомпоновкиДанных") Тогда
			Для Каждого ЭлементКД Из ПользовательскиеНастройкиКД.Элементы Цикл
				Если ТипЗнч(ЭлементКД) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
					ИмяПараметра = Строка(ЭлементКД.Параметр);
					Если ИмяПараметра = "ТипОбъектаМетаданных" Тогда
						ПараметрТипОбъектаМетаданных = ЭлементКД;
					ИначеЕсли ИмяПараметра = "ПолноеИмяОбъектаМетаданных" Тогда
						ПараметрПолноеИмяОбъектаМетаданных = ЭлементКД;
					ИначеЕсли ИмяПараметра = "ИмяТаблицы" Тогда
						ПараметрИмяТаблицы = ЭлементКД;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

		Если ПараметрТипОбъектаМетаданных = Неопределено Тогда
			ПараметрТипОбъектаМетаданных = НастройкиКД.ПараметрыДанных.Элементы.Найти("ТипОбъектаМетаданных");
		КонецЕсли;
		Если ПараметрПолноеИмяОбъектаМетаданных = Неопределено Тогда
			ПараметрПолноеИмяОбъектаМетаданных = НастройкиКД.ПараметрыДанных.Элементы.Найти("ПолноеИмяОбъектаМетаданных");
		КонецЕсли;
		Если ПараметрИмяТаблицы = Неопределено Тогда
			ПараметрИмяТаблицы = НастройкиКД.ПараметрыДанных.Элементы.Найти("ИмяТаблицы");
		КонецЕсли;
	КонецЕсли;

	// Чтение значений параметров.

	Если ПараметрТипОбъектаМетаданных <> Неопределено Тогда
		Результат.ТипОбъектаМетаданных = ПараметрТипОбъектаМетаданных.Значение;
	КонецЕсли;
	Если ПараметрПолноеИмяОбъектаМетаданных <> Неопределено Тогда
		Результат.ПолноеИмяОбъектаМетаданных = ПараметрПолноеИмяОбъектаМетаданных.Значение;
	КонецЕсли;
	Если ПараметрИмяТаблицы <> Неопределено Тогда
		Результат.ИмяТаблицы = ПараметрИмяТаблицы.Значение;
	КонецЕсли;

	// Заполнение значениями по умолчанию.

	Если Не ЗначениеЗаполнено(Результат.ТипОбъектаМетаданных) Тогда
		Результат.ТипОбъектаМетаданных = ТипОбъектаМетаданныхПоУмолчанию();
		Результат.ОчиститьСтруктуру = Истина;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Результат.ПолноеИмяОбъектаМетаданных) Тогда
		Результат.ПолноеИмяОбъектаМетаданных = ПолноеИмяОбъектаМетаданныхПоУмолчанию(НастройкиКД, Результат.ТипОбъектаМетаданных);
		Результат.ОчиститьСтруктуру = Истина;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Результат.ИмяТаблицы) Тогда
		Результат.ИмяТаблицы = ИмяТаблицыПоУмолчанию(НастройкиКД, Результат.ТипОбъектаМетаданных, Результат.ПолноеИмяОбъектаМетаданных);
	КонецЕсли;

	Возврат Результат;
КонецФункции

Функция ПолучитьТиповуюСхему(ПараметрыОтчета, НастройкиКД, НовыеПользовательскиеНастройкиКД) Экспорт
	СхемаКД = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");

	ИсточникДанных						= СхемаКД.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя					= "ИсточникДанных1";
	ИсточникДанных.ТипИсточникаДанных	= "Local";

	НаборДанных					= СхемаКД.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Имя				= "НаборДанных1";
	НаборДанных.ИсточникДанных	= ИсточникДанных.Имя;

	СхемаКД.ПоляИтога.Очистить();
	СхемаКД.НаборыДанных[0].Запрос = ТекстЗапросаПоМетаданным(ПараметрыОтчета);

	ДобавитьПоляНабораДанных(ПараметрыОтчета, СхемаКД);

	// Для справочников и планов видов расчета пользовательский параметр Период не выводится.
	Если ПараметрыОтчета.ТипОбъектаМетаданных = "Справочники" Или ПараметрыОтчета.ТипОбъектаМетаданных = "ПланыВидовРасчета" Тогда
		СхемаКД.Параметры.Период.ОграничениеИспользования = Истина;
	КонецЕсли;

	ДоступныеТаблицы = ДоступныеТаблицы(НастройкиКД, ПараметрыОтчета.ТипОбъектаМетаданных, ПараметрыОтчета.ПолноеИмяОбъектаМетаданных);
	Если ДоступныеТаблицы.Количество() <= 1 Тогда
		СхемаКД.Параметры.ИмяТаблицы.ОграничениеИспользования = Истина;
	КонецЕсли;

	Возврат СхемаКД;
КонецФункции

Функция ТипОбъектаМетаданныхПоУмолчанию()
	ЗначенияДляВыбора = ДоступныеТипыОбъектовМетаданных();

	Если ЗначенияДляВыбора.НайтиПоЗначению("РегистрыНакопления") <> Неопределено Тогда
		Возврат "РегистрыНакопления";
	Иначе
		Возврат ЗначенияДляВыбора[0].Значение;
	КонецЕсли;
КонецФункции

Функция ПолноеИмяОбъектаМетаданныхПоУмолчанию(НастройкиКД, ТипОбъектаМетаданных)
	ЗначенияДляВыбора = ДоступныеОбъектыМетаданных(НастройкиКД, ТипОбъектаМетаданных);

	ЭтоЗагруженнаяСхема = НастройкиКД.ДополнительныеСвойства.Свойство("СхемаКомпоновкиДанных");
	Если Не ЭтоЗагруженнаяСхема И ЗначенияДляВыбора.Количество() > 0 Тогда
		ЗначениеПоУмолчанию = ЗначенияДляВыбора[0].Значение;
	КонецЕсли;

	Возврат ЗначениеПоУмолчанию;
КонецФункции

Функция ИмяТаблицыПоУмолчанию(НастройкиКД, ТипОбъектаМетаданных, ПолноеИмяОбъектаМетаданных)
	ЗначенияДляВыбора = ДоступныеТаблицы(НастройкиКД, ТипОбъектаМетаданных, ПолноеИмяОбъектаМетаданных);

	ЭтоЗагруженнаяСхема = НастройкиКД.ДополнительныеСвойства.Свойство("СхемаКомпоновкиДанных");
	Если Не ЭтоЗагруженнаяСхема И ЗначенияДляВыбора.Количество() > 0 Тогда
		ЗначениеПоУмолчанию = ЗначенияДляВыбора[0].Значение;
	КонецЕсли;

	Возврат ЗначениеПоУмолчанию;
КонецФункции

Функция ТекстЗапросаПоМетаданным(ПараметрыОтчета)
	ТекстЗапроса = " ВЫБРАТЬ РАЗРЕШЕННЫЕ " + Символы.ПС;

	Если ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыСведений" Тогда
		ИмяТипаДанных = "РегистрСведений";
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыНакопления" Тогда
		ИмяТипаДанных = "РегистрНакопления";
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "Справочники" Тогда
		ИмяТипаДанных = "Справочник";
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "Документы" Тогда
		ИмяТипаДанных = "Документ";
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыБухгалтерии" Тогда
		ИмяТипаДанных = "РегистрБухгалтерии";
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыРасчета" Тогда
		ИмяТипаДанных = "РегистрРасчета";
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "ПланыВидовРасчета" Тогда
		ИмяТипаДанных = "ПланВидовРасчета";
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "БизнесПроцессы" Тогда
		ИмяТипаДанных = "БизнесПроцесс";
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "Задачи" Тогда
		ИмяТипаДанных = "Задача";
	КонецЕсли;

	ТекстЗапроса = Лев(ТекстЗапроса,СтрДлина(ТекстЗапроса)-2);
	ТекстЗапроса = ТекстЗапроса + "* ИЗ " + ИмяТипаДанных + "." + ПараметрыОтчета.ПолноеИмяОбъектаМетаданных;

	ЭтоТабличнаяЧастьИсточника = Ложь;

	Если НЕ ПустаяСтрока(ПараметрыОтчета.ИмяТаблицы) Тогда
		Если ИмяТипаДанных = "Справочник" ИЛИ ИмяТипаДанных = "Документ" ИЛИ ИмяТипаДанных = "Задача" ИЛИ ИмяТипаДанных = "БизнесПроцесс" Тогда
			// Если это табличная часть объекта то нужно проверить ее наличие.
			Если  Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных].ТабличныеЧасти.Найти(ПараметрыОтчета.ИмяТаблицы) <> Неопределено Тогда
				ТекстЗапроса				= ТекстЗапроса + "." + ПараметрыОтчета.ИмяТаблицы;
				ЭтоТабличнаяЧастьИсточника	= Истина;
			КонецЕсли;
		Иначе
			ТекстЗапроса = ТекстЗапроса + "." + ПараметрыОтчета.ИмяТаблицы;
		КонецЕсли;
	КонецЕсли;

	Если ПараметрыОтчета.ИмяТаблицы = "ОстаткиИОбороты" Или ПараметрыОтчета.ИмяТаблицы = "Обороты" Тогда
		ТекстЗапроса = ТекстЗапроса + "({&НачалоПериода} ,{&КонецПериода} ,Авто)";
	ИначеЕсли ПараметрыОтчета.ИмяТаблицы = "Остатки" Тогда
		ТекстЗапроса = ТекстЗапроса + "({&КонецПериода} ,)";
	ИначеЕсли ПараметрыОтчета.ИмяТаблицы = "СрезПервых" Тогда
		ТекстЗапроса = ТекстЗапроса + "({&НачалоПериода} ,)";
	ИначеЕсли ПараметрыОтчета.ИмяТаблицы = "СрезПоследних" Тогда
		ТекстЗапроса = ТекстЗапроса + "({&КонецПериода} ,)";
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + " КАК ИсточникДанных";

	Если ПараметрыОтчета.ТипОбъектаМетаданных = "Документы" Или ПараметрыОтчета.ТипОбъектаМетаданных = "Задачи" Или ПараметрыОтчета.ТипОбъектаМетаданных = "БизнесПроцессы" Тогда
		Если ЭтоТабличнаяЧастьИсточника Тогда
			ТекстЗапроса = ТекстЗапроса + "
				|{ГДЕ
				|	(ИсточникДанных.Ссылка.Дата >= &НачалоПериода),(ИсточникДанных.Ссылка.Дата <= &КонецПериода)}";
		Иначе
			ТекстЗапроса = ТекстЗапроса + "
				|{ГДЕ
				|	(ИсточникДанных.Дата >= &НачалоПериода),(ИсточникДанных.Дата <= &КонецПериода)}";
		КонецЕсли;
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыНакопления" И ПустаяСтрока(ПараметрыОтчета.ИмяТаблицы) Тогда
			ТекстЗапроса = ТекстЗапроса + "
				|{ГДЕ
				|	(ИсточникДанных.Период >= &НачалоПериода),(ИсточникДанных.Период <= &КонецПериода)}";
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыБухгалтерии" И ПустаяСтрока(ПараметрыОтчета.ИмяТаблицы) Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|{ГДЕ
			|	(ИсточникДанных.Период >= &НачалоПериода),(ИсточникДанных.Период <= &КонецПериода)}";
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыРасчета" Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|{ГДЕ
			|	ИсточникДанных.ПериодРегистрации >= &НачалоПериода И ИсточникДанных.ПериодРегистрации <= &КонецПериода}";
	КонецЕсли;

	Возврат ТекстЗапроса;
КонецФункции

Функция ДоступныеТаблицы(НастройкиКД, ТипОбъектаМетаданных = "", ПолноеИмяОбъектаМетаданных = "") Экспорт
	ЗначенияДляВыбора = Новый СписокЗначений;

	ЭтоЗагруженнаяСхема = НастройкиКД.ДополнительныеСвойства.Свойство("СхемаКомпоновкиДанных");

	Если ПустаяСтрока(ТипОбъектаМетаданных) Тогда
		ПараметрыОтчета					= НастройкиКД.ПараметрыДанных.Элементы;
		ПараметрТипОбъектаМетаданных	= ПараметрыОтчета.Найти("ТипОбъектаМетаданных");
		ТипОбъектаМетаданных			= ПараметрТипОбъектаМетаданных.Значение;
	КонецЕсли;

	Если ПустаяСтрока(ПолноеИмяОбъектаМетаданных) Тогда
		ПараметрыОтчета					= НастройкиКД.ПараметрыДанных.Элементы;
		ПараметрТипОбъектаМетаданных	= ПараметрыОтчета.Найти("ПолноеИмяОбъектаМетаданных");
		ПолноеИмяОбъектаМетаданных		= ПараметрТипОбъектаМетаданных.Значение;
	КонецЕсли;

	ПараметрыОтчета					= НастройкиКД.ПараметрыДанных.Элементы;
	ПараметрТипОбъектаМетаданных	= ПараметрыОтчета.Найти("ТипОбъектаМетаданных");

	ПараметрПолноеИмяОбъектаМетаданных = ПараметрыОтчета.Найти("ПолноеИмяОбъектаМетаданных");

	Если (НЕ ЗначениеЗаполнено(ТипОбъектаМетаданных) ИЛИ НЕ ЗначениеЗаполнено(ПолноеИмяОбъектаМетаданных)) И НЕ НастройкиКД.ДополнительныеСвойства.Свойство("СхемаКомпоновкиДанных") Тогда
		Возврат ЗначенияДляВыбора;
	КонецЕсли;

	ЗначенияДляВыбора.Добавить("", "Основные данные");
	Если ТипОбъектаМетаданных = "Документы"  ИЛИ ТипОбъектаМетаданных = "Задачи" ИЛИ ТипОбъектаМетаданных = "БизнесПроцессы" ИЛИ ТипОбъектаМетаданных = "Справочники" Тогда
		Для каждого ТабличнаяЧасть Из Метаданные[ТипОбъектаМетаданных][ПолноеИмяОбъектаМетаданных].ТабличныеЧасти Цикл
			ЗначенияДляВыбора.Добавить(ТабличнаяЧасть.Имя, ТабличнаяЧасть.Синоним);
		КонецЦикла;
	ИначеЕсли ТипОбъектаМетаданных = "РегистрыНакопления" Тогда
		Если Метаданные[ТипОбъектаМетаданных][ПолноеИмяОбъектаМетаданных].ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
			ЗначенияДляВыбора.Добавить("ОстаткиИОбороты", "Остатки и обороты");
		Иначе
			ЗначенияДляВыбора.Добавить("Обороты", "Обороты");
		КонецЕсли;
	ИначеЕсли ТипОбъектаМетаданных = "РегистрыСведений" Тогда
		Если Метаданные[ТипОбъектаМетаданных][ПолноеИмяОбъектаМетаданных].ПериодичностьРегистраСведений = Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический Тогда
		Иначе
			ЗначенияДляВыбора.Добавить("СрезПоследних", "Срез последних");
			ЗначенияДляВыбора.Добавить("СрезПервых",    "Срез первых");
		КонецЕсли;
	ИначеЕсли ТипОбъектаМетаданных = "РегистрыРасчета" Тогда
		Если Метаданные[ТипОбъектаМетаданных][ПолноеИмяОбъектаМетаданных].ПериодДействия Тогда
			ЗначенияДляВыбора.Добавить("ДанныеГрафика",             "Данные графика");
			ЗначенияДляВыбора.Добавить("ФактическийПериодДействия", "Фактический период действия");
		КонецЕсли;
	ИначеЕсли ТипОбъектаМетаданных = "ПланыВидовРасчета" Тогда
		ЗначенияДляВыбора.Добавить("БазовыеВидыРасчета",     "Базовые виды расчета");
		ЗначенияДляВыбора.Добавить("ВедущиеВидыРасчета",     "Ведущие виды расчета");
		ЗначенияДляВыбора.Добавить("ВытесняющиеВидыРасчета", "Вытесняющие виды расчета");
	ИначеЕсли ТипОбъектаМетаданных = "РегистрыБухгалтерии" Тогда
		ЗначенияДляВыбора.Добавить("ОстаткиИОбороты",   "Остатки и обороты");
		ЗначенияДляВыбора.Добавить("Остатки",           "Остатки");
		ЗначенияДляВыбора.Добавить("Обороты",           "Обороты");
		ЗначенияДляВыбора.Добавить("ОборотыДтКт",       "Обороты Дт/Кт");
		ЗначенияДляВыбора.Добавить("ДвиженияССубконто", "Движения с субконто");
	ИначеЕсли ЭтоЗагруженнаяСхема Тогда
		ЗначенияДляВыбора.Очистить();
	КонецЕсли;

	Возврат ЗначенияДляВыбора;
КонецФункции

Функция ДоступныеТипыОбъектовМетаданных() Экспорт
	ЗначенияДляВыбора = Новый СписокЗначений;

	Если ЕстьОбъектыТипаМетаданных(Метаданные.Документы) Тогда
		ЗначенияДляВыбора.Добавить("Документы", "Документ", , БиблиотекаКартинок.Документ);
	КонецЕсли;
	Если ЕстьОбъектыТипаМетаданных(Метаданные.Справочники) Тогда
		ЗначенияДляВыбора.Добавить("Справочники", "Справочник", , БиблиотекаКартинок.Справочник);
	КонецЕсли;
	Если ЕстьОбъектыТипаМетаданных(Метаданные.РегистрыНакопления) Тогда
		ЗначенияДляВыбора.Добавить("РегистрыНакопления", "Регистр накопления", , БиблиотекаКартинок.РегистрНакопления);
	КонецЕсли;
	Если ЕстьОбъектыТипаМетаданных(Метаданные.РегистрыСведений) Тогда
		ЗначенияДляВыбора.Добавить("РегистрыСведений", "Регистр сведений", , БиблиотекаКартинок.РегистрСведений);
	КонецЕсли;
	Если ЕстьОбъектыТипаМетаданных(Метаданные.РегистрыБухгалтерии) Тогда
		ЗначенияДляВыбора.Добавить("РегистрыБухгалтерии", "Регистр бухгалтерии", , БиблиотекаКартинок.РегистрБухгалтерии);
	КонецЕсли;
	Если ЕстьОбъектыТипаМетаданных(Метаданные.РегистрыРасчета) Тогда
		ЗначенияДляВыбора.Добавить("РегистрыРасчета", "Регистр расчета", , БиблиотекаКартинок.РегистрРасчета);
	КонецЕсли;
	Если ЕстьОбъектыТипаМетаданных(Метаданные.ПланыВидовРасчета) Тогда
		ЗначенияДляВыбора.Добавить("ПланыВидовРасчета", "Планы видов расчета", , БиблиотекаКартинок.ПланВидовРасчета);
	КонецЕсли;
	Если ЕстьОбъектыТипаМетаданных(Метаданные.БизнесПроцессы) Тогда
		ЗначенияДляВыбора.Добавить("БизнесПроцессы", "Бизнес-процессы", , БиблиотекаКартинок.БизнесПроцесс);
	КонецЕсли;
	Если ЕстьОбъектыТипаМетаданных(Метаданные.Задачи) Тогда
		ЗначенияДляВыбора.Добавить("Задачи", "Задачи", , БиблиотекаКартинок.Задача);
	КонецЕсли;

	Возврат ЗначенияДляВыбора;
КонецФункции

Функция ДоступныеОбъектыМетаданных(НастройкиКД, ТипОбъектаМетаданных = "") Экспорт
	ЗначенияДляВыбора = Новый СписокЗначений;
	УдаляемыеОбъекты  = Новый СписокЗначений;

	Если ПустаяСтрока(ТипОбъектаМетаданных) Тогда
		ПараметрыОтчета					= НастройкиКД.ПараметрыДанных.Элементы;
		ПараметрТипОбъектаМетаданных	= ПараметрыОтчета.Найти("ТипОбъектаМетаданных");
		ТипОбъектаМетаданных			= ПараметрТипОбъектаМетаданных.Значение;
	КонецЕсли;
	Если ТипОбъектаМетаданных <> Неопределено И Не ПустаяСтрока(ТипОбъектаМетаданных) Тогда
		Для каждого Объект Из Метаданные[ТипОбъектаМетаданных] Цикл
			Если Не БазоваяПодсистемаСервер.ОбъектМетаданныхДоступенПоФункциональнымОпциям(Объект) Или Не ПравоДоступа("Чтение", Объект) Тогда
				Продолжить;
			КонецЕсли;
			Если НРег(Лев(Объект.Имя, 7)) = "удалить" Тогда
				УдаляемыеОбъекты.Добавить(Объект.Имя, Объект.Синоним);
			Иначе
				ЗначенияДляВыбора.Добавить(Объект.Имя, Объект.Синоним);
			КонецЕсли;
		КонецЦикла;
		ЗначенияДляВыбора.СортироватьПоПредставлению(НаправлениеСортировки.Возр);
		УдаляемыеОбъекты.СортироватьПоПредставлению(НаправлениеСортировки.Возр);

		Для Каждого УдаляемыйОбъект Из УдаляемыеОбъекты Цикл
			ЗначенияДляВыбора.Добавить(УдаляемыйОбъект.Значение, УдаляемыйОбъект.Представление);
		КонецЦикла;
	КонецЕсли;

	Возврат ЗначенияДляВыбора;
КонецФункции

Функция ЕстьОбъектыТипаМетаданных(ТипМетаданных)
	Для каждого Объект Из ТипМетаданных Цикл
		Если БазоваяПодсистемаСервер.ОбъектМетаданныхДоступенПоФункциональнымОпциям(Объект) И ПравоДоступа("Чтение", Объект) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;

	Возврат Ложь;
КонецФункции

Процедура ДобавитьПоляНабораДанных(ПараметрыОтчета, СхемаКомпоновкиДанных)
	Если ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыНакопления" ИЛИ ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыСведений" ИЛИ ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыБухгалтерии" ИЛИ ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыРасчета" Тогда

		ОбъектМетаданных = Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных];
		// Добавляем измерения
		Для каждого Измерение Из ОбъектМетаданных.Измерения Цикл
			ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Измерение.Имя, Измерение.Синоним);
		КонецЦикла;

		// Добавляем реквизиты
		Если ПустаяСтрока(ПараметрыОтчета.ИмяТаблицы) Тогда
			Для каждого Реквизит Из ОбъектМетаданных.Реквизиты Цикл
				ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Реквизит.Имя, Реквизит.Синоним);
			КонецЦикла;
		КонецЕсли;

		// Добавляем поля периода
		Если ПараметрыОтчета.ИмяТаблицы = "ОстаткиИОбороты" ИЛИ ПараметрыОтчета.ИмяТаблицы = "Обороты" ИЛИ ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыБухгалтерии" И ПараметрыОтчета.ИмяТаблицы = ""Тогда
			ДобавитьПоляПериодаВНаборДанных(СхемаКомпоновкиДанных.НаборыДанных[0]);
		КонецЕсли;

		// Для регистров бухгалтерии важна настройка ролей.
		Если ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыБухгалтерии" Тогда
				ПолеСчет							= ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], "Счет", НСтр("Счет'"));
				ПолеСчет.Роль.ВыражениеВидаСчета	= "Счет.Вид";
				ПолеСчет.Роль.Счет					= Истина;

				Для НомерСубконто = 1 По 3 Цикл
					ПолеСубконто								= ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], "Субконто" + НомерСубконто, НСтр("Субконто'") + " " + НомерСубконто);
					ПолеСубконто.Роль.Измерение					= Истина;
					ПолеСубконто.Роль.ИгнорироватьЗначенияNULL	= Истина;
				КонецЦикла;
		КонецЕсли;

		// Добавляем ресурсы
		Для каждого Ресурс Из ОбъектМетаданных.Ресурсы Цикл
			Если ПараметрыОтчета.ИмяТаблицы = "Обороты" Тогда
				ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "Оборот", Ресурс.Синоним);
				ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "Оборот");

				Если ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыБухгалтерии" Тогда
					ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "ОборотДт", Ресурс.Синоним + " " + НСтр("оборот Дт'"), Ресурс.Имя + "ОборотДт");
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "ОборотДт");
					ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "ОборотКт", Ресурс.Синоним + " " + НСтр("оборот Кт'"), Ресурс.Имя + "ОборотКт");
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "ОборотКт");

					Если НЕ Ресурс.Балансовый Тогда
						ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "КорОборот", Ресурс.Синоним + " " + НСтр("кор. оборот'"), Ресурс.Имя + "КорОборот");
						ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "КорОборот");
						ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "КорОборотДт", Ресурс.Синоним + " " + НСтр("кор. оборот Дт'"), Ресурс.Имя + "КорОборотДт");
						ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "КорОборотДт");
						ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "КорОборотКт", Ресурс.Синоним + " " + НСтр("кор. оборот Кт'"), Ресурс.Имя + "КорОборотКт");
						ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "КорОборотКт");
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ПараметрыОтчета.ИмяТаблицы = "ОборотыДтКт" Тогда
				Если Ресурс.Балансовый Тогда
					ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "Оборот", Ресурс.Синоним);
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "Оборот");
				Иначе
					ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "ОборотДт", Ресурс.Синоним + " " + НСтр("оборот Дт'"), Ресурс.Имя + "ОборотДт");
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "ОборотДт");
					ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "ОборотКт", Ресурс.Синоним + " " + НСтр("оборот Кт'"), Ресурс.Имя + "ОборотКт");
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "ОборотКт");
				КонецЕсли;
			ИначеЕсли ПараметрыОтчета.ИмяТаблицы = "ДвиженияССубконто" Тогда
				Если Ресурс.Балансовый Тогда
					ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя, Ресурс.Синоним);
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя);
				Иначе
					ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "Дт", Ресурс.Синоним + " " + НСтр("Дт'"), Ресурс.Имя + "Дт");
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "Дт");
					ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "Кт", Ресурс.Синоним + " " + НСтр("Кт'"), Ресурс.Имя + "Кт");
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "Кт");
				КонецЕсли;
			ИначеЕсли ПараметрыОтчета.ИмяТаблицы = "ОстаткиИОбороты" Тогда
				ПолеНабора = ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "НачальныйОстаток", Ресурс.Синоним + " " + НСтр("нач. остаток'"), Ресурс.Имя + "НачальныйОстаток");
				ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "НачальныйОстаток");

				Если ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыБухгалтерии" Тогда
					ПолеНабора.Роль.Остаток						= Истина;
					ПолеНабора.Роль.ТипОстатка					= ТипОстаткаКомпоновкиДанных.НачальныйОстаток;
					ПолеНабора.Роль.ГруппаОстатка				= "Ост" + Ресурс.Имя;
					ПолеНабора.Роль.ПолеСчета					= "Счет";

					ПолеНабора									= ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "НачальныйОстатокДт", Ресурс.Синоним + " " + НСтр("нач. остаток Дт'"), Ресурс.Имя + "НачальныйОстатокДт");
					ПолеНабора.Роль.Остаток						= Истина;
					ПолеНабора.Роль.ТипОстатка					= ТипОстаткаКомпоновкиДанных.НачальныйОстаток;
					ПолеНабора.Роль.ТипБухгалтерскогоОстатка	= ТипБухгалтерскогоОстаткаКомпоновкиДанных.Дебет;
					ПолеНабора.Роль.ПолеСчета					= "Счет";
					ПолеНабора.Роль.ГруппаОстатка				= "Ост" + Ресурс.Имя;
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "НачальныйОстатокДт");

					ПолеНабора									= ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "НачальныйОстатокКт", Ресурс.Синоним + " " + НСтр("нач. остаток Кт'"), Ресурс.Имя + "НачальныйОстатокКт");
					ПолеНабора.Роль.Остаток						= Истина;
					ПолеНабора.Роль.ТипОстатка					= ТипОстаткаКомпоновкиДанных.НачальныйОстаток;
					ПолеНабора.Роль.ТипБухгалтерскогоОстатка	= ТипБухгалтерскогоОстаткаКомпоновкиДанных.Кредит;
					ПолеНабора.Роль.ПолеСчета					= "Счет";
					ПолеНабора.Роль.ГруппаОстатка				= "Ост" + Ресурс.Имя;
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "НачальныйОстатокКт");

					ПолеНабора									= ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "НачальныйРазвернутыйОстатокДт", Ресурс.Синоним + " " + НСтр("нач. развернутый остаток Дт'"), Ресурс.Имя + "НачальныйРазвернутыйОстатокДт");
					ПолеНабора.Роль.Остаток						= Истина;
					ПолеНабора.Роль.ТипОстатка					= ТипОстаткаКомпоновкиДанных.НачальныйОстаток;
					ПолеНабора.Роль.ТипБухгалтерскогоОстатка	= ТипБухгалтерскогоОстаткаКомпоновкиДанных.Нет;
					ПолеНабора.Роль.ПолеСчета					= "Счет";
					ПолеНабора.Роль.ГруппаОстатка				= "РазвОст" + Ресурс.Имя;
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "НачальныйРазвернутыйОстатокДт");

					ПолеНабора									= ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "НачальныйРазвернутыйОстатокКт", Ресурс.Синоним + " " + НСтр("нач. развернутый остаток Кт'"), Ресурс.Имя + "НачальныйРазвернутыйОстатокКт");
					ПолеНабора.Роль.Остаток						= Истина;
					ПолеНабора.Роль.ТипОстатка					= ТипОстаткаКомпоновкиДанных.НачальныйОстаток;
					ПолеНабора.Роль.ТипБухгалтерскогоОстатка	= ТипБухгалтерскогоОстаткаКомпоновкиДанных.Нет;
					ПолеНабора.Роль.ПолеСчета					= "Счет";
					ПолеНабора.Роль.ГруппаОстатка				= "РазвОст" + Ресурс.Имя;
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "НачальныйРазвернутыйОстатокКт");
				КонецЕсли;

				ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "Оборот", Ресурс.Синоним + " " + НСтр("оборот'"), Ресурс.Имя + "Оборот");
				ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "Оборот");

				Если ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыНакопления" Тогда
					ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "Приход", Ресурс.Синоним + " " + НСтр("приход'"), Ресурс.Имя + "Приход");
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "Приход");

					ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "Расход", Ресурс.Синоним + " " + НСтр("расход'"), Ресурс.Имя + "Расход");
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "Расход");
				ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыБухгалтерии" Тогда
					ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "ОборотДт", Ресурс.Синоним + " " + НСтр("оборот Дт'"), Ресурс.Имя + "ОборотДт");
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "ОборотДт");

					ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "ОборотКт", Ресурс.Синоним + " " + НСтр("оборот Кт'"), Ресурс.Имя + "ОборотКт");
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "ОборотКт");
				КонецЕсли;

				ПолеНабора = ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "КонечныйОстаток", Ресурс.Синоним + " " + НСтр("кон. остаток'"), Ресурс.Имя + "КонечныйОстаток");
				ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "КонечныйОстаток");

				Если ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыБухгалтерии" Тогда
					ПолеНабора.Роль.Остаток						= Истина;
					ПолеНабора.Роль.ТипОстатка					= ТипОстаткаКомпоновкиДанных.КонечныйОстаток;
					ПолеНабора.Роль.ПолеСчета					= "Счет";
					ПолеНабора.Роль.ГруппаОстатка				= "Ост" + Ресурс.Имя;

					ПолеНабора									= ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "КонечныйОстатокДт", Ресурс.Синоним + " " + НСтр("кон. остаток Дт'"), Ресурс.Имя + "КонечныйОстатокДт");
					ПолеНабора.Роль.Остаток						= Истина;
					ПолеНабора.Роль.ТипОстатка					= ТипОстаткаКомпоновкиДанных.КонечныйОстаток;
					ПолеНабора.Роль.ТипБухгалтерскогоОстатка	= ТипБухгалтерскогоОстаткаКомпоновкиДанных.Дебет;
					ПолеНабора.Роль.ПолеСчета					= "Счет";
					ПолеНабора.Роль.ГруппаОстатка				= "Ост" + Ресурс.Имя;
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "КонечныйОстатокДт");

					ПолеНабора									= ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "КонечныйОстатокКт", Ресурс.Синоним + " " + НСтр("кон. остаток Кт'"), Ресурс.Имя + "КонечныйОстатокКт");
					ПолеНабора.Роль.Остаток						= Истина;
					ПолеНабора.Роль.ТипОстатка					= ТипОстаткаКомпоновкиДанных.КонечныйОстаток;
					ПолеНабора.Роль.ТипБухгалтерскогоОстатка	= ТипБухгалтерскогоОстаткаКомпоновкиДанных.Кредит;
					ПолеНабора.Роль.ПолеСчета					= "Счет";
					ПолеНабора.Роль.ГруппаОстатка				= "Ост" + Ресурс.Имя;
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "КонечныйОстатокКт");

					ПолеНабора									= ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "КонечныйРазвернутыйОстатокДт", Ресурс.Синоним + " " + НСтр("кон. развернутый остаток Дт'"), Ресурс.Имя + "КонечныйРазвернутыйОстатокДт");
					ПолеНабора.Роль.Остаток						= Истина;
					ПолеНабора.Роль.ТипОстатка					= ТипОстаткаКомпоновкиДанных.КонечныйОстаток;
					ПолеНабора.Роль.ТипБухгалтерскогоОстатка	= ТипБухгалтерскогоОстаткаКомпоновкиДанных.Нет;
					ПолеНабора.Роль.ПолеСчета					= "Счет";
					ПолеНабора.Роль.ГруппаОстатка				= "РазвОст" + Ресурс.Имя;
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "КонечныйРазвернутыйОстатокДт");

					ПолеНабора									= ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "КонечныйРазвернутыйОстатокКт", Ресурс.Синоним + " " + НСтр("кон. развернутый остаток Кт'"), Ресурс.Имя + "КонечныйРазвернутыйОстатокКт");
					ПолеНабора.Роль.Остаток						= Истина;
					ПолеНабора.Роль.ТипОстатка					= ТипОстаткаКомпоновкиДанных.КонечныйОстаток;
					ПолеНабора.Роль.ТипБухгалтерскогоОстатка	= ТипБухгалтерскогоОстаткаКомпоновкиДанных.Нет;
					ПолеНабора.Роль.ПолеСчета					= "Счет";
					ПолеНабора.Роль.ГруппаОстатка				= "РазвОст" + Ресурс.Имя;
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "КонечныйРазвернутыйОстатокКт");
				КонецЕсли;
			ИначеЕсли ПараметрыОтчета.ИмяТаблицы = "Остатки" Тогда
				ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "Остаток", Ресурс.Синоним + " " + НСтр("остаток'"), Ресурс.Имя + "Остаток");
				ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "Остаток");

				ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "ОстатокДт", Ресурс.Синоним + " " + НСтр("остаток Дт'"), Ресурс.Имя + "ОстатокДт");
				ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "ОстатокДт");

				ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "ОстатокКт", Ресурс.Синоним + " " + НСтр("остаток Кт'"), Ресурс.Имя + "ОстатокКт");
				ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "ОстатокКт");

				ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "РазвернутыйОстатокДт", Ресурс.Синоним + " " + НСтр("развернутый остаток Дт'"), Ресурс.Имя + "РазвернутыйОстатокДт");
				ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "РазвернутыйОстатокДт");

				ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "РазвернутыйОстатокКт", Ресурс.Синоним + " " + НСтр("развернутый остаток Кт'"), Ресурс.Имя + "РазвернутыйОстатокКт");
				ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "РазвернутыйОстатокКт");
			ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыСведений" Тогда
				ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя, Ресурс.Синоним);
				Если Ресурс.Тип.СодержитТип(Тип("Число")) Тогда
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя, Ресурс.Имя);
				КонецЕсли;
			ИначеЕсли ПараметрыОтчета.ИмяТаблицы = "" Тогда
				Если ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыБухгалтерии" Тогда
					Если Ресурс.Балансовый Тогда
						ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя, Ресурс.Синоним);
						ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя);
					Иначе
						ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "Дт", Ресурс.Синоним + " " + НСтр("Дт'"), Ресурс.Имя + "Дт");
						ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "Дт");
						ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя + "Кт", Ресурс.Синоним + " " + НСтр("Кт'"), Ресурс.Имя + "Кт");
						ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя + "Кт");
					КонецЕсли;
				Иначе
					ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Ресурс.Имя, Ресурс.Синоним);
					ДобавитьПолеИтога(СхемаКомпоновкиДанных, Ресурс.Имя);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "Документы"  ИЛИ ПараметрыОтчета.ТипОбъектаМетаданных = "Справочники" Тогда
		Если ПараметрыОтчета.ИмяТаблицы = "" Тогда
			ОбъектМетаданных = Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных];
		Иначе
			ОбъектМетаданных = Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных].ТабличныеЧасти.Найти(ПараметрыОтчета.ИмяТаблицы);
			Если ОбъектМетаданных = Неопределено Тогда
				ОбъектМетаданных = Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных];
			КонецЕсли;
		КонецЕсли;

		// Добавляем реквизиты
		Для каждого Реквизит Из ОбъектМетаданных.Реквизиты Цикл
			ДобавитьПолеНабораДанных(СхемаКомпоновкиДанных.НаборыДанных[0], Реквизит.Имя, Реквизит.Синоним);
			Если Реквизит.Тип.СодержитТип(Тип("Число")) Тогда
				ДобавитьПолеИтога(СхемаКомпоновкиДанных, Реквизит.Имя);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// Добавляет в набор данных поле набора данных.
Функция ДобавитьПолеНабораДанных(НаборДанных, Поле, Заголовок, ПутьКДанным = Неопределено)
	Если ПутьКДанным = Неопределено Тогда
		ПутьКДанным = Поле;
	КонецЕсли;

	ПолеНабораДанных				= НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
	ПолеНабораДанных.Поле			= Поле;
	ПолеНабораДанных.Заголовок		= Заголовок;
	ПолеНабораДанных.ПутьКДанным	= ПутьКДанным;

	Возврат ПолеНабораДанных;
КонецФункции

Функция ДобавитьПоляПериодаВНаборДанных(НаборДанных)
	СписокПериодов = Новый СписокЗначений;
	СписокПериодов.Добавить("ПериодСекунда",   "Период секунда");
	СписокПериодов.Добавить("ПериодМинута",    "Период минута");
	СписокПериодов.Добавить("ПериодЧас",       "Период час");
	СписокПериодов.Добавить("ПериодДень",      "Период день");
	СписокПериодов.Добавить("ПериодНеделя",    "Период неделя");
	СписокПериодов.Добавить("ПериодДекада",    "Период декада");
	СписокПериодов.Добавить("ПериодМесяц",     "Период месяц");
	СписокПериодов.Добавить("ПериодКвартал",   "Период квартал");
	СписокПериодов.Добавить("ПериодПолугодие", "Период полугодие");
	СписокПериодов.Добавить("ПериодГод",       "Период год");

	ИмяПапки							= "Периоды";
	СписокПолейНабораДанных				= Новый СписокЗначений;
	ПапкаПолейНабораДанных				= НаборДанных.Поля.Добавить(Тип("ПапкаПолейНабораДанныхСхемыКомпоновкиДанных"));
	ПапкаПолейНабораДанных.Заголовок	= ИмяПапки;
	ПапкаПолейНабораДанных.ПутьКДанным	= ИмяПапки;

	ТипПериода = ТипПериодаКомпоновкиДанных.Основной;

	Для каждого Период Из СписокПериодов Цикл
		ПолеНабораДанных					= НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
		ПолеНабораДанных.Поле				= Период.Значение;
		ПолеНабораДанных.Заголовок			= Период.Представление;
		ПолеНабораДанных.ПутьКДанным		= ИмяПапки + "." + Период.Значение;
		ПолеНабораДанных.Роль.ТипПериода	= ТипПериода;
		ПолеНабораДанных.Роль.НомерПериода	= СписокПериодов.Индекс(Период);
		СписокПолейНабораДанных.Добавить(ПолеНабораДанных);
		ТипПериода							= ТипПериодаКомпоновкиДанных.Дополнительный;
	КонецЦикла;

	Возврат СписокПолейНабораДанных;
КонецФункции

// Функция добавляет поле итога в схему компоновки данных. Если параметр Выражение не указан, используется Сумма(ПутьКДанным).
Функция ДобавитьПолеИтога(СхемаКомпоновкиДанных, ПутьКДанным, Выражение = Неопределено)
	Если Выражение = Неопределено Тогда
		Выражение = "Сумма(" + ПутьКДанным + ")";
	КонецЕсли;

	ПолеИтога				= СхемаКомпоновкиДанных.ПоляИтога.Добавить();
	ПолеИтога.ПутьКДанным	= ПутьКДанным;
	ПолеИтога.Выражение		= Выражение;

	Возврат ПолеИтога;
КонецФункции

Процедура ДобавитьПоказатели(ПараметрыОтчета, НастройкиКД)
	Если ПараметрыОтчета.ИмяТаблицы = "ОстаткиИОбороты" Тогда
		ВыбранныеПоляНачальныйОстаток				= НастройкиКД.Выбор.Элементы.Добавить(Тип("ГруппаВыбранныхПолейКомпоновкиДанных"));
		ВыбранныеПоляНачальныйОстаток.Заголовок		= "Нач. остаток";
		ВыбранныеПоляНачальныйОстаток.Расположение	= РасположениеПоляКомпоновкиДанных.Горизонтально;
		Если ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыНакопления" Тогда
			ВыбранныеПоляПриход					= НастройкиКД.Выбор.Элементы.Добавить(Тип("ГруппаВыбранныхПолейКомпоновкиДанных"));
			ВыбранныеПоляПриход.Заголовок		= "Приход";
			ВыбранныеПоляПриход.Расположение	= РасположениеПоляКомпоновкиДанных.Горизонтально;
			ВыбранныеПоляРасход					= НастройкиКД.Выбор.Элементы.Добавить(Тип("ГруппаВыбранныхПолейКомпоновкиДанных"));
			ВыбранныеПоляРасход.Заголовок		= "Расход";
			ВыбранныеПоляРасход.Расположение	= РасположениеПоляКомпоновкиДанных.Горизонтально;
		ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыБухгалтерии" Тогда
			ВыбранныеПоляОбороты				= НастройкиКД.Выбор.Элементы.Добавить(Тип("ГруппаВыбранныхПолейКомпоновкиДанных"));
			ВыбранныеПоляОбороты.Заголовок		= "Обороты";
			ВыбранныеПоляОбороты.Расположение	= РасположениеПоляКомпоновкиДанных.Горизонтально;
		КонецЕсли;
		ВыбранныеПоляКонечныйОстаток				= НастройкиКД.Выбор.Элементы.Добавить(Тип("ГруппаВыбранныхПолейКомпоновкиДанных"));
		ВыбранныеПоляКонечныйОстаток.Заголовок		= "Кон. остаток";
		ВыбранныеПоляКонечныйОстаток.Расположение	= РасположениеПоляКомпоновкиДанных.Горизонтально;
	КонецЕсли;

	Если ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыНакопления" Тогда
		Для каждого Измерение Из Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных].Измерения Цикл
				ВыбранныеПоля = НастройкиКД.Выбор;
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Измерение.Имя);
		КонецЦикла;
		Для каждого Ресурс Из Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных].Ресурсы Цикл
			ВыбранныеПоля = НастройкиКД.Выбор;
			Если ПараметрыОтчета.ИмяТаблицы = "Обороты" Тогда
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля,					Ресурс.Имя + "Оборот");
			ИначеЕсли ПараметрыОтчета.ИмяТаблицы = "ОстаткиИОбороты" Тогда
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоляНачальныйОстаток,	Ресурс.Имя + "НачальныйОстаток", Ресурс.Синоним);
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоляПриход,				Ресурс.Имя + "Приход", Ресурс.Синоним);
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоляРасход,				Ресурс.Имя + "Расход", Ресурс.Синоним);
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоляКонечныйОстаток,		Ресурс.Имя + "КонечныйОстаток", Ресурс.Синоним);
			ИначеЕсли ПараметрыОтчета.ИмяТаблицы = "" Тогда
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля,					Ресурс.Имя);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыРасчета" Тогда
		Для каждого Измерение Из Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных].Измерения Цикл
				ВыбранныеПоля = НастройкиКД.Выбор;
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Измерение.Имя);
		КонецЦикла;
		Для каждого Ресурс Из Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных].Ресурсы Цикл
			ВыбранныеПоля = НастройкиКД.Выбор;
			ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Ресурс.Имя);
		КонецЦикла;
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыСведений" Тогда
		Для каждого Измерение Из Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных].Измерения Цикл
			ВыбранныеПоля = НастройкиКД.Выбор;
			ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Измерение.Имя);
		КонецЦикла;
		Для каждого Ресурс Из Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных].Ресурсы Цикл
			ВыбранныеПоля = НастройкиКД.Выбор;
			ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Ресурс.Имя);
		КонецЦикла;
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "РегистрыБухгалтерии" Тогда
		Для каждого Ресурс Из Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных].Ресурсы Цикл
			ВыбранныеПоля = НастройкиКД.Выбор;
			Если ПараметрыОтчета.ИмяТаблицы = "Обороты" Тогда
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Ресурс.Имя + "ОборотДт", Ресурс.Синоним + " оборот Дт");
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Ресурс.Имя + "ОборотКт", Ресурс.Синоним + " оборот Кт");
			ИначеЕсли ПараметрыОтчета.ИмяТаблицы = "ОборотыДтКт" Тогда
				Если Ресурс.Балансовый Тогда
					ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Ресурс.Имя + "Оборот", Ресурс.Синоним + " оборот");
				Иначе
					ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Ресурс.Имя + "ОборотДт", Ресурс.Синоним + " оборот Дт");
					ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Ресурс.Имя + "ОборотКт", Ресурс.Синоним + " оборот Кт");
				КонецЕсли;
			ИначеЕсли ПараметрыОтчета.ИмяТаблицы = "Остатки" Тогда
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Ресурс.Имя + "ОстатокДт", Ресурс.Синоним + " ост. Дт");
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Ресурс.Имя + "ОстатокКт", Ресурс.Синоним + " ост. Кт");
			ИначеЕсли ПараметрыОтчета.ИмяТаблицы = "ОстаткиИОбороты" Тогда
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоляНачальныйОстаток,	Ресурс.Имя + "НачальныйОстатокДт", Ресурс.Синоним + " нач. ост. Дт");
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоляНачальныйОстаток,	Ресурс.Имя + "НачальныйОстатокКт", Ресурс.Синоним + " нач. ост. Кт");
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоляОбороты,				Ресурс.Имя + "ОборотДт", Ресурс.Синоним + " оборот Дт");
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоляОбороты,				Ресурс.Имя + "ОборотКт", Ресурс.Синоним + " оборот Кт");
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоляКонечныйОстаток,		Ресурс.Имя + "КонечныйОстатокДт", " " + Ресурс.Синоним + "кон. ост. Дт");
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоляКонечныйОстаток,		Ресурс.Имя + "КонечныйОстатокКт", " " + Ресурс.Синоним + "ru = 'кон. ост. Кт");
			ИначеЕсли ПараметрыОтчета.ИмяТаблицы = "ДвиженияССубконто" Тогда
				Если Ресурс.Балансовый Тогда
					ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Ресурс.Имя, Ресурс.Синоним);
				Иначе
					ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Ресурс.Имя + "Дт", Ресурс.Синоним + " Дт");
					ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Ресурс.Имя + "Кт", Ресурс.Синоним + " Кт");
				КонецЕсли;
			ИначеЕсли ПараметрыОтчета.ИмяТаблицы = "" Тогда
				Если Ресурс.Балансовый Тогда
					ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Ресурс.Имя, Ресурс.Синоним);
				Иначе
					ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Ресурс.Имя + "Дт", Ресурс.Синоним + " Дт");
					ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Ресурс.Имя + "Кт", Ресурс.Синоним + " Кт");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "Документы" ИЛИ ПараметрыОтчета.ТипОбъектаМетаданных = "Задачи" ИЛИ ПараметрыОтчета.ТипОбъектаМетаданных = "БизнесПроцессы" ИЛИ ПараметрыОтчета.ТипОбъектаМетаданных = "Справочники" Тогда
		Если ПараметрыОтчета.ИмяТаблицы = "" Тогда
			ОбъектМетаданных = Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных];
		Иначе
			ОбъектМетаданных = Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных].ТабличныеЧасти[ПараметрыОтчета.ИмяТаблицы];
		КонецЕсли;
		ВыбранныеПоля = НастройкиКД.Выбор;
		ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, "Ссылка");
		Для каждого Реквизит Из ОбъектМетаданных.Реквизиты Цикл
			ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Реквизит.Имя);
		КонецЦикла;
	ИначеЕсли ПараметрыОтчета.ТипОбъектаМетаданных = "ПланыВидовРасчета" Тогда
		Если ПараметрыОтчета.ИмяТаблицы = "" Тогда
			ОбъектМетаданных = Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных];
			Для каждого Реквизит Из ОбъектМетаданных.Реквизиты Цикл
				ВыбранныеПоля = НастройкиКД.Выбор;
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Реквизит.Имя);
			КонецЦикла;
		Иначе
			ОбъектМетаданных = Метаданные[ПараметрыОтчета.ТипОбъектаМетаданных][ПараметрыОтчета.ПолноеИмяОбъектаМетаданных].СтандартныеТабличныеЧасти[ПараметрыОтчета.ИмяТаблицы];
			Для каждого Реквизит Из ОбъектМетаданных.СтандартныеРеквизиты Цикл
				ВыбранныеПоля = НастройкиКД.Выбор;
				ВариантыОтчетовКлиентСервер.ДобавитьВыбранноеПоле(ВыбранныеПоля, Реквизит.Имя);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецЕсли